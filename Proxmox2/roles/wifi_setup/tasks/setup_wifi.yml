---
- name: Extract interfaces starting with 'w'
  set_fact:
    wifi_interfaces: "{{ ansible_facts['interfaces'] | select('match', '^w.*') | list }}"

- name: Set the first Wi-Fi interface or empty string
  set_fact:
    primary_wifi_interface: "{{ wifi_interfaces[0] if wifi_interfaces | length > 0 else '' }}"

- name: Fail if no Wi-Fi interface found
  fail:
    msg: "No Wi-Fi interface found to configure."
  when: primary_wifi_interface == ''

- name: Bring the Wi-Fi interface up
  command: "ip link set {{ primary_wifi_interface }} up"
  when: primary_wifi_interface != ''
  become: yes

- name: Generate WPA configuration using wpa_passphrase
  shell: "wpa_passphrase '{{ ssid }}' '{{ passphrase }}' > /etc/wpa_supplicant/wpa_supplicant.conf"
  args:
    creates: /etc/wpa_supplicant.conf
  become: yes
  vars:
    ssid: "YourSSID"
    passphrase: "YourPassphrase"

- name: Start wpa_supplicant service
  shell: "wpa_supplicant -B -i {{ primary_wifi_interface }} -c /etc/wpa_supplicant/wpa_supplicant.conf"
  become: yes

- name: Obtain an IP address via DHCP
  shell: "dhclient {{ primary_wifi_interface }}"
  become: yes

- name: Verify Wi-Fi connection
  command: "ping -c 3 8.8.8.8"
  register: ping_result
  ignore_errors: yes

- name: Display connection status
  debug:
    msg: "{{ 'Wi-Fi connected successfully!' if ping_result.rc == 0 else 'Failed to connect to Wi-Fi.' }}"

- name: Stop dhclient service
  service:
    name: dhclient
    state: stopped
  become: yes

- name: Disable dhclient service from starting at boot
  service:
    name: dhclient
    enabled: no
  become: yes

- name: Remove existing configurations for wlo1 from /etc/network/interfaces
  lineinfile:
    path: /etc/network/interfaces
    regexp: '^iface wlo1'
    state: absent
  become: yes

- name: To be able to auto connect to WiFi and assign static ip we need to edit /etc/network/interfaces
  copy:
    dest: /etc/network/interfaces
    content: |
      # Static IP Configuration for wlo1
      auto wlo1
      iface wlo1 inet static
      address 192.168.0.122
      netmask 255.255.255.0
      gateway 192.168.0.1

      # Wi-Fi Configuration
      iface wlo1 inet dhcp
      wpa-ssid "{{ ssid }}"
      wpa-psk "{{ passphrase }}"
    mode: '0644'
  become: yes

